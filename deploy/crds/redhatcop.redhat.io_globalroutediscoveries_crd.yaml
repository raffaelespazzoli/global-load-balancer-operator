apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: globalroutediscoveries.redhatcop.redhat.io
spec:
  group: redhatcop.redhat.io
  names:
    kind: GlobalRouteDiscovery
    listKind: GlobalRouteDiscoveryList
    plural: globalroutediscoveries
    singular: globalroutediscovery
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GlobalRouteDiscovery is the Schema for the globalroutediscoveries
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GlobalRouteDiscoverySpec defines the desired state of GlobalRouteDiscovery
            properties:
              clusters:
                description: Cluster is an arrays with the list of clusters in which
                  global routes will be discovered
                items:
                  description: ClusterReference contains the infomation necessary
                    to connect to a cluster
                  properties:
                    clusterCredentialRef:
                      description: CredentialsSecretRef is a reference to a secret
                        containing the credentials to access the cluster a key called
                        "kubeconfig" containing a valid kubeconfig file for connecting
                        to the cluster must exist in this secret.
                      properties:
                        name:
                          type: string
                        namespace:
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    clusterName:
                      description: ClusterName name of the cluster to connect to.
                      type: string
                  required:
                  - clusterCredentialRef
                  - clusterName
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - clusterName
                x-kubernetes-list-type: map
              defaultLoadBalancingPolicy:
                default: Multivalue
                description: DefaultLoadBalancingPolicy defines the load balancing
                  policy to be used by default. This can be overriden with a route
                  annotation TODO which?
                enum:
                - Weighted
                - Multivalue
                - Geolocation
                - Geoproximity
                - Latency
                - Failover
                type: string
              routeSelector:
                description: RouteSelector is the selector that selects the global
                  routes, this allows you to define also local routes.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            type: object
          status:
            description: GlobalRouteDiscoveryStatus defines the observed state of
              GlobalRouteDiscovery
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
